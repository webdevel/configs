#!/usr/bin/sh

SCRIPT=$(basename $0)
SUCCESS=0
session=session
windows=3
is_session_created=1
is_tmux_on_path=$(type tmux > /dev/null 2>&1; echo $?)

show_help()
{
cat << EOF

Create tmux session.

Usage: $SCRIPT [OPTIONS]

OPTIONS:
  -h    Help message
  -s    Session name in tmux (default: $session)
  -w    Windows created in session (default: $windows)

EXAMPLES:
  ./$SCRIPT -s $session -w $windows

EOF
}

# use getopts to parse command-line arguments/options
while getopts "hs:w:" option; do

  case $option in

    h)
      show_help
      exit
      ;;
    s)
      session=$OPTARG
      ;;
    w)
      windows=$OPTARG
      ;;

  esac

done

# tell the user when tmux is not found and exit
if [ $SUCCESS -ne $is_tmux_on_path ]; then

  echo "Tmux not found."

  # exit with error status
  exit $is_tmux_on_path

fi

# list sessions and check if it exists
does_session_exist=$(tmux list-sessions 2> /dev/null | grep "$session" > /dev/null 2>&1; echo $?)

# only create session if it does not exist already
if [ $SUCCESS -ne $does_session_exist ]; then

  # create tmux session, but do not attach to it yet
  tmux new-session -ds $session

  # get exit status of tmux new-session
  is_session_created=$?

fi

# only create additional windows if windows count is a positive number we expect
if [ 1 -lt $windows ]; then

  # iterate through window count sequence
  for window in $(seq 1 $windows); do

    # attempt to create window while suppressing errors
    tmux new-window -dt $session:$window 2> /dev/null

  done

fi

# only select window pane if session is created
if [ $SUCCESS -eq $is_session_created ]; then

  tmux select-window -t $session:1
  tmux select-pane -t $session:1.1

  # do not attach to session in this script or it will not exit until tmux does
  printf '\n%s\n' "NOW TRY: tmux attach -t $session"

fi
